{# Backstage scaffolder to render the file as is and to skip this content to interpret as template   #}
{% extends '_layout.njk' %}
{% from "govuk/components/breadcrumbs/macro.njk" import govukBreadcrumbs %}
{% block beforeContent %}
  {{ govukBreadcrumbs({
    items: [
      {
        text: "Home",
        href: "/"
      },
      {
        text: "Document response",
        href: "#"
      }
    ]
  }) }}
{% endblock %}
{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <h1 class="govuk-heading-xl">Document response</h1>
      <div class="govuk-grid-row govuk-body">
        <div class="govuk-grid-column-one-quarter">
          <strong>Name</strong>
        </div>
        <div class="govuk-grid-column-one-quarter">
          <strong>Date</strong>
        </div>
        <div class="govuk-grid-column-one-quarter">
          <strong>Category</strong>
        </div>
      </div>
      <div class="govuk-grid-row govuk-body">
        <div class="govuk-grid-column-one-quarter">
          {{ document.metadata.fileName }}
        </div>
        <div class="govuk-grid-column-one-quarter">
          {{ document.properties.createdOn }}
        </div>
        <div class="govuk-grid-column-one-quarter">
          {{ document.metadata.suggestedCategory }}
        </div>
        <div class="govuk-grid-column-one-quarter govuk-!-text-align-right">
          <button
            type="button"
            class="govuk-button"
            data-module="govuk-button"
            onclick="document.getElementById('Correspondence').style.display = 'block'">
            View
          </button>
        </div>
      </div>
      <p id="Correspondence" class="govuk-body" style="display: none;">
        {{ contents | replace("\n", "<br>") | safe }}
      </p>

      {% if response.response %}
        <form action="/document-response" method="get">
          <div class="govuk-grid-row govuk-body">
            <div class="govuk-grid-column-one-quarter">
              <strong>Persona</strong>
            </div>
            <div class="govuk-grid-column-one-quarter">
              <strong>Prompt</strong>
            </div>
            <div class="govuk-grid-column-one-quarter">
              <strong>Model</strong>
            </div>
          </div>
          
          <div class="govuk-grid-row govuk-body">
            <div class="govuk-grid-column-one-quarter">
              Government official
            </div>
            <div class="govuk-grid-column-one-quarter">
              Government official
            </div>
            <div class="govuk-grid-column-one-quarter">
              GPT3.5
            </div>
          </div>

          <h2 class="govuk-heading-m">Response</h2>
          <p class="govuk-body summary">{{ response.response | replace('\n', '<br>') | safe }}</p>
          
          {% if not response.citations | length %}
            <div class="govuk-warning-text">
              <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
              <strong class="govuk-warning-text__text">
                <span class="govuk-visually-hidden">Warning</span>
                No sources found.
              </strong>
            </div>
          {% endif %}
          {% if response.citations | length %}
            <details class="govuk-details govuk-details-no-border">
              <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                  Sources
                </span>
              </summary>
              <div class="govuk-details__text">
                {% for citation in response.citations %}
                  <div class="govuk-summary-card">
                    <div class="govuk-summary-card__title-wrapper">
                      <h2 class="govuk-summary-card__title">
                        Source {{ loop.index }}: {{ citation.title }}
                      </h2>
                    </div>
                    <div class="govuk-summary-card__content">
                      <dl class="govuk-summary-list">
                        <div class="govuk-summary-list__row">
                          <dt class="govuk-summary-list__key">
                            Source
                          </dt>
                          <dd class="govuk-summary-list__value">
                            {{ citation.source }}
                          </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                          <dt class="govuk-summary-list__key">
                            Category
                          </dt>
                          <dd class="govuk-summary-list__value">
                            {{ citation.category }}
                          </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                          <dt class="govuk-summary-list__key">
                            Lines
                          </dt>
                          <dd class="govuk-summary-list__value">
                            {% for line in citation.locations.lines %}
                              {{ line.from }}-{{ line.to }}{% if not loop.last %}, {% endif %}
                            {% endfor %}
                          </dd>
                        </div>
                      </dl>
                    </div>
                  </div>
                {% endfor %}
              </div>
            </details>
          {% endif %}
        </form>
      {% endif %}


      <form id="response_form" action="/document/response" method="post">
        <h2 id="customise_input" class="govuk-heading-m govuk-!-margin-top-8">Customise this response</h2>

        <textarea class="govuk-textarea" id="more-detail" name="usertext" rows="5" aria-describedby="more-detail-hint">{{ usertext }}</textarea>
        <details class="govuk-details govuk-details-no-border">
          <summary class="govuk-details__summary">
            <span class="govuk-details__summary-text">
              Show examples
            </span>
          </summary>
          <div class="govuk-details__text">
            <ul>
              <li>Remove the first paragraph</li>
              <li>Add a section explaining the boundary grants that are available</li>
            </ul>
          </div>
        </details>
        <div class="govuk-button-group govuk-!-margin-top-8">
          <button type="submit" name="action" value="generate" data-prevent-double-click="true" class="govuk-button" data-module="govuk-button">
            <span>Generate response</span>
          </button>
          <a
            href="/document/{{ document.documentId }}/response/history"
            data-prevent-double-click="true"
            class="govuk-button govuk-button--secondary"
            data-module="govuk-button">
            Response history
          </a>
          <button
            type="submit"
            name="action"
            value="start_over"
            data-prevent-double-click="true"
            class="govuk-button govuk-button--warning"
            data-module="govuk-button">
            Start over
          </button>
        </div>
        <input type="hidden" name="documentId" value="{{ document.documentId }}"></form>
      </div>
    </div>
  </div>
{% endblock %}

{% block bodyEnd %}
  <script>
    const form = document.querySelector('#response_form')

    const documentId = form.querySelector('input[name="documentId"]').value

    const formAttributes = form.attributes

    const es = new EventSource(`/document/${documentId}/response/events`)

    es.addEventListener('error', (event) => {
      console.error(event)
    })

    form.onsubmit = async (event) => {
      event.preventDefault()

      const documentId = form.querySelector('input[name="documentId"]').value

      const data = {
        documentId: form.querySelector('input[name="documentId"]').value,
        usertext: form.querySelector('textarea[name="usertext"]').value,
        action: event.submitter.attributes['value'].value
      }

      if (data.action === 'generate') {
        const button = form.querySelector('button[type="submit"][name="action"][value="generate"]')

        button.classList.add('govuk-button--disabled')
        button.classList.add('button--loading')
        button.querySelector('span').classList.add('button-text--loading')
      }

      try {
        const res = await fetch(formAttributes['action'].value, {
          method: formAttributes['method'].value,
          body: JSON.stringify(data),
          headers: {
            'Content-Type': 'application/json'
          }
        })

      } catch (error) {
        console.error(error)
        location.reload()
      }

      es.addEventListener('message', (event) => {
        const data = JSON.parse(event.data)

        if (data.event === 'response') {
          location.reload()
        }
      })
    }
  </script>
{% endblock %}
